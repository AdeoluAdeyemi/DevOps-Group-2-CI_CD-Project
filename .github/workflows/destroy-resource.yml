name: Destroy AWS Resource

on:
  workflow_dispatch:

env:
  AWS_REGION: eu-west-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: tf_govuk_fe_wtf_demo_ecr_repo           # set this to your Amazon ECR repository name
  ECS_SERVICE: tf_govuk_service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: tf_ecs_cluster                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: tf_task_def # set this to the path to your Amazon ECS task definition
  CONTAINER_NAME: govuk-fe-wtf-demo           # set this to the name of the container in the
  DOCKER_BUILD_DIR: ./
  DOCKER_FILE: Dockerfile
  BACKEND_S3_BUCKET: govuk-fe-demo-terraform-state-backend
  BACKEND_DYNAMODB_TABLE: terraform_state
  VPC_CIDR_BLOCK: "10.0.0.0/16"
  VPC_SUBNET_MAIN: "10.0.1.0/24"
  VPC_SUBNET_SECONDARY: "10.0.2.0/24"
  VPC_SUBNET_AVAILABILITY_ZONE_1: "eu-west-2a"
  VPC_SUBNET_AVAILABILITY_ZONE_2: "eu-west-2c"
  VPC_GATEWAY_ID: "vgw-062345678"
  VPC_SUBNET_ROUTE_TABLE_CIDR: "0.0.0.0/0"
  VPC_SECURITY_GROUP_INGRESS_CIDR: "0.0.0.0/0"
  VPC_SECURITY_GROUP_EGRESS_CIDR: "0.0.0.0/0"
  PORT: 80
  AWS_ELB_NAME: "tf-lb-test"
  AWS_ELB_TARGET_GROUP: "tf-tg-main"

jobs:
  destroy-resource:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Configure AWS credentials
      #====================================#
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      #======================================#
      # Install Terraform and its dependencies
      #======================================#
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: 1.8.5

                #================================#
      # Dynamically create tfvars file
      #================================#
      - name: Generate tfvars file
        id: tfvars
        run: |
          touch prod.tfvars
          echo "aws_region = \"${{ env.AWS_REGION }}\"" >> prod.tfvars
          echo "aws_vpc_cidr_block = \"${{ env.VPC_CIDR_BLOCK }}\"" >> prod.tfvars
          echo "aws_subnet_main_cidr_block = \"${{ env.VPC_SUBNET_MAIN }}\"" >> prod.tfvars
          echo "aws_subnet_secondary_cidr_block = \"${{ env.VPC_SUBNET_SECONDARY }}\"" >> prod.tfvars
          echo "aws_route_table_cidr_block = \"${{ env.VPC_SUBNET_ROUTE_TABLE_CIDR }}\"" >> prod.tfvars
          echo "aws_security_group_ingress_cidr_block = \"${{ env.VPC_SECURITY_GROUP_INGRESS_CIDR }}\"" >> prod.tfvars
          echo "aws_security_group_egress_cidr_block = \"${{ env.VPC_SECURITY_GROUP_EGRESS_CIDR }}\"" >> prod.tfvars
          echo "availability_zone_a = \"${{ env.VPC_SUBNET_AVAILABILITY_ZONE_1 }}\"" >> prod.tfvars
          echo "availability_zone_b = \"${{ env.VPC_SUBNET_AVAILABILITY_ZONE_2 }}\"" >> prod.tfvars
          echo "port = \"${{ env.PORT }}\"" >> prod.tfvars
          echo "aws_elb_name = \"${{ env.AWS_ELB_NAME }}\"" >> prod.tfvars
          echo "aws_elb_target_group_name = \"${{ env.AWS_ELB_TARGET_GROUP }}\"" >> prod.tfvars
          echo "aws_ecr_repo_name = \"${{ env.ECR_REPOSITORY }}\"" >> prod.tfvars
          echo "aws_ecs_cluster_name = \"${{ env.ECS_CLUSTER }}\"" >> prod.tfvars
          echo "aws_ecs_name = \"${{ env.ECS_SERVICE }}\"" >> prod.tfvars
          echo "aws_task_def = \"${{ env.ECS_TASK_DEFINITION }}\"" >> prod.tfvars
          echo "aws_ecs_task_df_container_name = \"${{ env.CONTAINER_NAME }}\"" >> prod.tfvars

          cat prod.tfvars
        working-directory: infra/
      

      #=============================#
      # Terraform Init
      #=============================#
      - name: Terraform Init
        id: init
        run: terraform init   
        working-directory: infra/

        
      #=============================#
      # Terraform Validate.
      #=============================#
      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -var-file="prod.tfvars" -lock=false -no-color
        working-directory: infra/
